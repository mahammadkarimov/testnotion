openapi: 3.0.3
info:
  title: Exam Management System API
  version: 1.0.0
  description: API documentation for Exam Management System
paths:
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/me/:
    get:
      operationId: auth_me_retrieve
      tags:
      - auth
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/branches/:
    get:
      operationId: branches_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - branches
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBranchList'
          description: ''
    post:
      operationId: branches_create
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BranchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BranchRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/branches/{id}/:
    get:
      operationId: branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: branches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BranchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BranchRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: branches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranchRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: branches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/branches/{id}/toggle_status/:
    patch:
      operationId: branches_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranchRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/classes/:
    get:
      operationId: classes_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - classes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClassList'
          description: ''
    post:
      operationId: classes_create
      tags:
      - classes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClassRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClassRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
  /api/classes/{id}/:
    get:
      operationId: classes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this class.
        required: true
      tags:
      - classes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
    put:
      operationId: classes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this class.
        required: true
      tags:
      - classes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClassRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClassRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
    patch:
      operationId: classes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this class.
        required: true
      tags:
      - classes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClassRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClassRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClassRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
    delete:
      operationId: classes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this class.
        required: true
      tags:
      - classes
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/classes/{id}/toggle_status/:
    patch:
      operationId: classes_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this class.
        required: true
      tags:
      - classes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClassRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClassRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClassRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
  /api/exams/:
    get:
      operationId: exams_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - exams
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamListList'
          description: ''
    post:
      operationId: exams_create
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamCreate'
          description: ''
  /api/exams-student/:
    get:
      operationId: exams_student_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - exams-student
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamListList'
          description: ''
    post:
      operationId: exams_student_create
      tags:
      - exams-student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamListRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamList'
          description: ''
  /api/exams-student/{id}/:
    get:
      operationId: exams_student_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams-student
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamList'
          description: ''
    put:
      operationId: exams_student_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams-student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamListRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamList'
          description: ''
    patch:
      operationId: exams_student_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams-student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamListRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamList'
          description: ''
    delete:
      operationId: exams_student_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams-student
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/exams/{id}/:
    get:
      operationId: exams_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
    put:
      operationId: exams_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamUpdate'
          description: ''
    patch:
      operationId: exams_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamDetailRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
    delete:
      operationId: exams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/exams/{id}/correct_answers/:
    get:
      operationId: exams_correct_answers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
    post:
      operationId: exams_correct_answers_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
  /api/exams/{id}/duplicate/:
    post:
      operationId: exams_duplicate_create
      description: |-
        Duplicate an exam with all its details except student results.
        Creates a copy of exam details, correct answers, section details, and exam subjects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
  /api/exams/{id}/import_correct_answers/:
    post:
      operationId: exams_import_correct_answers_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamDetailRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
  /api/exams/{id}/toggle_status/:
    patch:
      operationId: exams_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam.
        required: true
      tags:
      - exams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamDetailRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: ''
  /api/export/export_answer_cards/:
    get:
      operationId: export_export_answer_cards_retrieve
      tags:
      - export
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/export/export_results/:
    get:
      operationId: export_export_results_retrieve
      tags:
      - export
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/export/import_answer_cards/:
    post:
      operationId: export_import_answer_cards_create
      tags:
      - export
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/groups/:
    get:
      operationId: groups_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - groups
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groups_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/groups/{id}/:
    get:
      operationId: groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/groups/{id}/toggle_status/:
    patch:
      operationId: groups_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/result-card/by_work_number/:
    get:
      operationId: result_card_by_work_number_retrieve
      tags:
      - result-card
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/result-card/generate_pdf/:
    get:
      operationId: result_card_generate_pdf_retrieve
      tags:
      - result-card
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/results/{id}/exam_results/:
    get:
      operationId: results_exam_results_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - results
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/results/by_work_number/:
    get:
      operationId: results_by_work_number_retrieve
      tags:
      - results
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/results/summary/:
    get:
      operationId: results_summary_retrieve
      tags:
      - results
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/results/update_student_result/:
    put:
      operationId: results_update_student_result_update
      tags:
      - results
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/sections/:
    get:
      operationId: sections_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - sections
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSectionList'
          description: ''
    post:
      operationId: sections_create
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SectionRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
  /api/sections/{id}/:
    get:
      operationId: sections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    put:
      operationId: sections_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SectionRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    patch:
      operationId: sections_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSectionRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    delete:
      operationId: sections_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/sections/{id}/toggle_status/:
    patch:
      operationId: sections_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this section.
        required: true
      tags:
      - sections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSectionRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
  /api/stats/get_stats/:
    get:
      operationId: stats_get_stats_retrieve
      tags:
      - stats
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/student-results/:
    get:
      operationId: student_results_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - student-results
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentResultList'
          description: ''
    post:
      operationId: student_results_create
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/student-results/{id}/:
    get:
      operationId: student_results_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student result.
        required: true
      tags:
      - student-results
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
    put:
      operationId: student_results_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student result.
        required: true
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
    patch:
      operationId: student_results_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student result.
        required: true
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentResultRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
    delete:
      operationId: student_results_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student result.
        required: true
      tags:
      - student-results
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/student-results/{id}/toggle_status/:
    patch:
      operationId: student_results_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student result.
        required: true
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentResultRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/student-results/{id}/upload_answer_card/:
    put:
      operationId: student_results_upload_answer_card_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student result.
        required: true
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/student-results/bulk_delete/:
    post:
      operationId: student_results_bulk_delete_create
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/student-results/import_results/:
    post:
      operationId: student_results_import_results_create
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/student-results/not_uploaded/:
    get:
      operationId: student_results_not_uploaded_retrieve
      tags:
      - student-results
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/student-results/recheck_answers/:
    post:
      operationId: student_results_recheck_answers_create
      description: |-
        Recheck student answers with foreign language filtering

        Expected payload:
        {
            "student_answers": {"1": "A", "2": "B", ...},
            "foreign_language": "I"  // Optional foreign language code
        }
      tags:
      - student-results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResult'
          description: ''
  /api/subjects/:
    get:
      operationId: subjects_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - subjects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubjectList'
          description: ''
    post:
      operationId: subjects_create
      tags:
      - subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
  /api/subjects/{id}/:
    get:
      operationId: subjects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - subjects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    put:
      operationId: subjects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    patch:
      operationId: subjects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    delete:
      operationId: subjects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - subjects
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/subjects/{id}/toggle_status/:
    patch:
      operationId: subjects_toggle_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
  /cavabKarti/:
    get:
      operationId: cavabKarti_retrieve
      tags:
      - cavabKarti
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Branch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        logo:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    BranchRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        logo:
          type: string
          format: binary
          nullable: true
        is_active:
          type: boolean
      required:
      - name
    Class:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ClassRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        is_active:
          type: boolean
      required:
      - name
    ExamCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - date
      - name
      - type
    ExamCreateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        branch_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        class_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        section_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        groups:
          type: array
          items:
            type: string
            minLength: 1
          writeOnly: true
          nullable: true
        section_details:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetailRequest'
          writeOnly: true
      required:
      - date
      - name
      - section_details
      - section_ids
      - type
    ExamDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        participant_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        branch_count:
          type: string
          readOnly: true
        is_active:
          type: boolean
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
        classes:
          type: array
          items:
            $ref: '#/components/schemas/Class'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
        section_details:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetail'
        groups:
          type: array
          items:
            type: integer
        branch_ids:
          type: string
          readOnly: true
        class_ids:
          type: string
          readOnly: true
        section_ids:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        group_ids:
          type: string
          readOnly: true
      required:
      - branch_count
      - branch_ids
      - class_ids
      - created_at
      - date
      - group_ids
      - groups
      - id
      - name
      - section_ids
      - type
      - updated_at
    ExamDetailRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        participant_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        is_active:
          type: boolean
        branches:
          type: array
          items:
            $ref: '#/components/schemas/BranchRequest'
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassRequest'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionRequest'
        section_details:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetailRequest'
        groups:
          type: array
          items:
            type: integer
      required:
      - date
      - groups
      - name
      - type
    ExamList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        participant_count:
          type: string
          readOnly: true
        branch_count:
          type: string
          readOnly: true
        is_active:
          type: boolean
        branch_ids:
          type: string
          readOnly: true
      required:
      - branch_count
      - branch_ids
      - date
      - id
      - name
      - participant_count
      - type
    ExamListRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        is_active:
          type: boolean
      required:
      - date
      - name
      - type
    ExamSubject:
      type: object
      properties:
        subject:
          type: integer
        subject_name:
          type: string
          readOnly: true
        question_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - question_count
      - subject
      - subject_name
    ExamSubjectRequest:
      type: object
      properties:
        subject:
          type: integer
        question_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - question_count
      - subject
    ExamUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        section_details:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetail'
      required:
      - date
      - name
      - type
    ExamUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        branch_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        class_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        section_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        groups:
          type: array
          items:
            type: string
            minLength: 1
          writeOnly: true
          nullable: true
        section_details:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetailRequest'
      required:
      - date
      - name
      - type
    GenderEnum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    GroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
      required:
      - name
    PaginatedBranchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PaginatedClassList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Class'
    PaginatedExamListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamList'
    PaginatedGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedSectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Section'
    PaginatedStudentResultList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentResult'
    PaginatedSubjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
    PatchedBranchRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        logo:
          type: string
          format: binary
          nullable: true
        is_active:
          type: boolean
    PatchedClassRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        is_active:
          type: boolean
    PatchedExamDetailRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        participant_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        is_active:
          type: boolean
        branches:
          type: array
          items:
            $ref: '#/components/schemas/BranchRequest'
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassRequest'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionRequest'
        section_details:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetailRequest'
        groups:
          type: array
          items:
            type: integer
    PatchedExamListRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 500
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/TypeEnum'
        is_active:
          type: boolean
    PatchedGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
    PatchedSectionRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
    PatchedStudentResultRequest:
      type: object
      properties:
        student_name:
          type: string
          minLength: 1
          maxLength: 255
        work_number:
          type: string
          minLength: 1
          maxLength: 50
        gender:
          $ref: '#/components/schemas/GenderEnum'
        contact_number:
          type: string
          minLength: 1
          maxLength: 20
        branch:
          type: integer
        variant:
          type: string
          minLength: 1
          maxLength: 10
        section:
          type: integer
        total_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        answer_card_pdf:
          type: string
          format: binary
          nullable: true
          pattern: (?:pdf)$
        is_active:
          type: boolean
    PatchedSubjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_foreign_language:
          type: boolean
          default: false
          description: Bu fənn xarici dil fənnidir
        is_active:
          type: boolean
    Section:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    SectionDetail:
      type: object
      properties:
        section:
          type: integer
        section_name:
          type: string
          readOnly: true
        variant_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        subject_count:
          type: string
          readOnly: true
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/ExamSubject'
        group:
          type: integer
          nullable: true
        group_name:
          type: string
          nullable: true
      required:
      - section
      - section_name
      - subject_count
      - subjects
    SectionDetailRequest:
      type: object
      properties:
        section:
          type: integer
        variant_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/ExamSubjectRequest'
        group:
          type: integer
          nullable: true
        group_name:
          type: string
          nullable: true
          minLength: 1
      required:
      - section
      - subjects
    SectionRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
      required:
      - name
    StudentResult:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_name:
          type: string
          maxLength: 255
        work_number:
          type: string
          maxLength: 50
        gender:
          $ref: '#/components/schemas/GenderEnum'
        contact_number:
          type: string
          maxLength: 20
        branch:
          type: integer
        branch_name:
          type: string
          readOnly: true
        variant:
          type: string
          maxLength: 10
        section:
          type: integer
        section_name:
          type: string
          readOnly: true
        total_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        answer_card_pdf:
          type: string
          format: uri
          nullable: true
          pattern: (?:pdf)$
        is_active:
          type: boolean
      required:
      - branch
      - branch_name
      - contact_number
      - gender
      - id
      - section
      - section_name
      - student_name
      - variant
      - work_number
    StudentResultRequest:
      type: object
      properties:
        student_name:
          type: string
          minLength: 1
          maxLength: 255
        work_number:
          type: string
          minLength: 1
          maxLength: 50
        gender:
          $ref: '#/components/schemas/GenderEnum'
        contact_number:
          type: string
          minLength: 1
          maxLength: 20
        branch:
          type: integer
        variant:
          type: string
          minLength: 1
          maxLength: 10
        section:
          type: integer
        total_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        answer_card_pdf:
          type: string
          format: binary
          nullable: true
          pattern: (?:pdf)$
        is_active:
          type: boolean
      required:
      - branch
      - contact_number
      - gender
      - section
      - student_name
      - variant
      - work_number
    Subject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_foreign_language:
          type: boolean
          default: false
          description: Bu fənn xarici dil fənnidir
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    SubjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_foreign_language:
          type: boolean
          default: false
          description: Bu fənn xarici dil fənnidir
        is_active:
          type: boolean
      required:
      - name
    TypeEnum:
      enum:
      - 9-cu sinif buraxılış
      - 11-ci sinif buraxılış
      - Blok imtahanı
      - Magistratura
      - Bilik yarışı
      - Təkmilləşdirmə
      - Müəllimlərin İşə Qəbulu
      - Sertifikasiya
      - Dövlət Qulluğu
      type: string
      description: |-
        * `9-cu sinif buraxılış` - 9-cu sinif buraxılış
        * `11-ci sinif buraxılış` - 11-ci sinif buraxılış
        * `Blok imtahanı` - Blok imtahanı
        * `Magistratura` - Magistratura
        * `Bilik yarışı` - Bilik yarışı
        * `Təkmilləşdirmə` - Təkmilləşdirmə
        * `Müəllimlərin İşə Qəbulu` - Müəllimlərin İşə Qəbulu
        * `Sertifikasiya` - Sertifikasiya
        * `Dövlət Qulluğu` - Dövlət Qulluğu
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
